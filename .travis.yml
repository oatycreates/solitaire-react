language: ruby
rvm: # See .ruby-version for ruby version to use through RVM

env:
  - DB=sqlite
  # Ensure the correct statements in the before_script section are also uncommented depending on which database engine is in use
  #- DB=postgresql
  #- DB=mysql

sudo: false
before_install:
  # Install node manually because Travis only supports one language definition
  - . $HOME/.nvm/nvm.sh # Enable nvm
  - nvm install # This should pick up the version from .nvmrc
  - nvm use # Select the .nvmrc version for use

  # 29/12/2016: Only run Rails tests for now
  # # Yarn installation, can be run with sudo: false above
  # - curl -o- -L https://yarnpkg.com/install.sh | bash
  # - export PATH=$HOME/.yarn/bin:$PATH

install:
  - cd server/
  - gem install bundler
  - bundle install --deployment --without development production
  - cd ../

  # 29/12/2016: Only run Rails tests for now
  #- cd client/
  #- yarn install
  #- cd ../

before_script:
  # Ensure the correct statements in the env section are also uncommented depending on which database engine is in use
  # # Initialise any available databases if needed
  #- psql -c 'create database solitaire_react_test' -U postgres
  #- mysql -e 'create database solitaire_react_test'

script:
  - cd server/
  # Manually run db:migrate on the base database due to the older SQLite version used by Travis not supporting multi-INSERT statements as triggered during a migration
  # See here: https://github.com/rails/rails/issues/26948
  - RAILS_ENV=test bundle exec rake db:migrate --trace
  - bundle exec rake db:test:prepare
  - bundle exec rspec spec/
  - cd ../

  # 29/12/2016: Only run Rails tests for now
  #- cd client/
  #- yarn test
  #- cd ../

cache:
  -bundler: true
  -yarn: true
  directories:
    - server/vendor/bundle
    - client/node_modules
