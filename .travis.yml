language: ruby
# rvm: # See .ruby-version for ruby version to use through RVM

env:
  global:
    - DB=sqlite
    # Ensure the correct statements in the before_script section are also uncommented depending on which database engine is in use, since this is in the global: section, only have one of these or move to the matrix: section.
    # See: https://docs.travis-ci.com/user/environment-variables/
    #- DB=postgresql
    #- DB=mysql

sudo: false
before_install:
  # Install node manually because Travis only supports one language definition
  - . $HOME/.nvm/nvm.sh # Enable nvm
  - nvm install # This should pick up the version from .nvmrc
  - nvm use # Select the .nvmrc version for use

  # Yarn installation, can be run with sudo: false above
  - curl -o- -L https://yarnpkg.com/install.sh | bash
  - export PATH=$HOME/.yarn/bin:$PATH

install:
  # Rails tests
  - cd server/
  - gem install bundler
  - bundle install --deployment --without development production
  - cd ../

  # Yarn tests
  - cd client/
  - yarn install
  # Fixes an issue with node-sass not generating bindings for the OS
  # See: https://github.com/sass/node-sass/issues/1579
  - npm rebuild node-sass
  - cd ../

# before_script:
#   # Ensure the correct statements in the env section are also uncommented depending on which database engine is in use
#   # Initialise any available databases if needed
#   - psql -c 'create database solitaire_react_test' -U postgres
#   - mysql -e 'create database solitaire_react_test'

script:
  # Rails tests
  - cd server/
  # Manually run db:create and db:migrate to generate a test database due to the older SQLite version used by Travis not supporting multi-INSERT statements as triggered during a migration
  # See here: https://github.com/rails/rails/issues/26948
  - RAILS_ENV=test bundle exec rake db:create --trace
  - RAILS_ENV=test bundle exec rake db:migrate --trace
  - bundle exec rspec spec/
  # Run snyk to test for Ruby gem dependency vulnerabilities
  - ../client/node_modules/.bin/snyk test
  - cd ../

  # Yarn tests
  - cd client/
  # Pipe javascript test coverage lcov.info results into coveralls
  - node scripts/test.js --coverage --env=jsdom && cat ./coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js
  - yarn run build
  # Run snyk to test for Javascript package dependency vulnerabilities
  - ./node_modules/.bin/snyk test
  - cd ../

  # TODO: Consider deploying after this point in an after_script or deploy section?
  # See: http://kamranicus.com/blog/2015/02/26/continuous-deployment-with-travis-ci/

cache:
  bundler: true
  directories:
    - server/vendor/bundle
    - client/node_modules
    - $HOME/.node-gyp
    - $HOME/.npm
    - $HOME/.yarn-cache
